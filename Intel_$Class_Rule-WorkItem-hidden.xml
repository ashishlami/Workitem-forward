<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Rule-WorkItem-hidden" type="FieldValue">
  <Description>This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also, any field values that have been processed so far from the policy related to the Application/Role will be available.</Description>
  <ReferencedRules>
    <Reference class="sailpoint.object.Rule" name="WorkItemForward-Rule-Library"/>
  </ReferencedRules>
  <Signature returnType="String">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="identity" type="Identity">
        <Description>
          The Identity object that represents the user needing the field value.
        </Description>
      </Argument>
      <Argument name="link" type="Link">
        <Description>
          The sailpoint.object.Link that is being acted upon. If the link is not applicable,
          this value will be null.
        </Description>
      </Argument>
      <Argument name="group" type="ManagedAttribute">
        <Description>
          The sailpoint.object.ManagedAttribute that is being acted upon. If the managed attribute
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="project" type="ProvisioningProject">
        <Description>
          The provisioning project being acted upon. If a provisioning project is not applicable,
          the value will be null.
        </Description>
      </Argument>
      <Argument name="accountRequest" type="ProvisioningPlan.AccountRequest">
        <Description>
          The account request. If an account request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="objectRequest" type="ProvisioningPlan.ObjectRequest">
        <Description>
          The object request. If an object request is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="role" type="Bundle">
        <Description>
          The role with the template we are compiling. If the role is
          not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="application" type="Application">
        <Description>
          The sailpont.object.Application with the template we are compiling. If the application
          is not applicable, the value will be null.
        </Description>
      </Argument>
      <Argument name="template" type="Template">
        <Description>
          The Template that contains this field.
        </Description>
      </Argument>
      <Argument name="field" type="Field">
        <Description>
          The current field being computed.
        </Description>
      </Argument>
      <Argument name="current" type="Object">
        <Description>
          The current value corresponding to the identity or account attribute that the field represents.
          If no current value is set, this value will be null.
        </Description>
      </Argument>
      <Argument name="operation" type="ProvisioningPlan.Operation">
        <Description>
          The operation being performed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="value">
        <Description>
          The string value created.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>

      import org.apache.log4j.Logger;
          import org.apache.log4j.Level;
          import java.util.Map;
          import java.text.SimpleDateFormat;
          import java.util.Date;
          import sailpoint.object.Identity;

          Identity forwardingIdentityObj=null;
          String name = form.getField("userId").getValue();

  				if(name!=null) {
  				String delegateName = getForwardUser(name);
  				Identity iden_del = context.getObjectByName(Identity.class,delegateName);
  				String dele_display = iden_del.getDisplayName();
          Identity idObj = context.getObjectByName(Identity.class, name);
          if(null != idObj &amp;&amp; null != idObj.getPreference(Identity.PRF_FORWARD)){
          String forwardingUser= (String) idObj.getPreference(Identity.PRF_FORWARD);
          forwardingIdentityObj = context.getObjectByName(Identity.class, forwardingUser);

          Date date = new Date();
          SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
          String strDate= formatter.format(date);
          Date d1 = formatter.parse(strDate);

          Map map = idObj.getPreferences();
          Date delegateName2 = map.get("forwardEndDate");

          SimpleDateFormat formatter1 = new SimpleDateFormat("yyyy-MM-dd");
          String strDate1= formatter1.format(delegateName2);
          Date d2 = formatter1.parse(strDate1);

          if(d2.after(d1) || d2.equals(d1)) {

          return name+"("+"Forwarding to "+dele_display+")";
          }
          }
  				}
          return "";

        </Source>
</Rule>
